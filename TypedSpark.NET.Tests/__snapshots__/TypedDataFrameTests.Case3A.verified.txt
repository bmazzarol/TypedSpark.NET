== Parsed Logical Plan ==
'Project ['a.A AS A1, 'b.A AS A2, ('a.B + 'b.B) AS C]
+- Join Cross
   :- SubqueryAlias a
   :  +- Relation [A,B,C] json
   +- SubqueryAlias b
      +- Relation [A,B,C] json

== Analyzed Logical Plan ==
A1: string, A2: string, C: int
Project [A AS A1, A AS A2, (B + B) AS C]
+- Join Cross
   :- SubqueryAlias a
   :  +- Relation [A,B,C] json
   +- SubqueryAlias b
      +- Relation [A,B,C] json

== Optimized Logical Plan ==
Project [A AS A1, A AS A2, (B + B) AS C]
+- Join Cross
   :- Project [A, B]
   :  +- InMemoryRelation [A, B, C], StorageLevel(disk, memory, deserialized, 1 replicas)
   +- Project [A, B]
      +- InMemoryRelation [A, B, C], StorageLevel(disk, memory, deserialized, 1 replicas)

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [A AS A1, A AS A2, (B + B) AS C]
   +- BroadcastNestedLoopJoin BuildRight, Cross
      :- InMemoryTableScan [A, B]
      :     +- InMemoryRelation [A, B, C], StorageLevel(disk, memory, deserialized, 1 replicas)
      +- BroadcastExchange IdentityBroadcastMode, [id=]
         +- InMemoryTableScan [A, B]
               +- InMemoryRelation [A, B, C], StorageLevel(disk, memory, deserialized, 1 replicas)

root
 |-- A1: string (nullable = true)
 |-- A2: string (nullable = true)
 |-- C: integer (nullable = true)


(top = 20)
+---+---+---+
|A1 |A2 |C  |
+---+---+---+
|1  |1  |2  |
|1  |2  |3  |
|2  |1  |3  |
|2  |2  |4  |
+---+---+---+
